#!/bin/bash
#
# MikoPBX - free phone system for small business
# Copyright (C) 2017-2020 Alexey Portnov and Nikolay Beketov
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
#

PATH=$PATH:/sbin:/usr/sbin:/bin:/usr/bin:/usr/sbin
# export TERM=xterm-color
export CLICOLOR=1
export GREP_OPTIONS='--color=auto'
export LSCOLORS=gxfxcxdxbxegedabagacad
export HISTCONTROL=ignoredups
export HISTFILESIZE=100000
export HISTSIZE=5000

shopt -s histappend
shopt -s histreedit
shopt -s histverify
shopt -s autocd
shopt -s cdspell
shopt -s dirspell
shopt -s cmdhist

alias ls='ls --color=auto'
alias myip="curl http://ipecho.net/plain; echo"
alias remount-offload="_remountOffload"
alias xdebug-enable="_xdebugEnable"
alias xdebug-enable-www="_xdebugEnableWww"

PS1='\w\$ '
PS2='>'

export LANG=en_US.utf8

_remountOffload()
{
  nowMode="$(mount | grep /offload | cut -d '(' -f 2 | cut -d ',' -f 1)";
  mountPoint="$(mount | grep /offload | cut -d ' ' -f 1)";
  if [ "${nowMode}" == 'rw' ]; then
    newMode='ro';
    mount -o remount,ro "$mountPoint";
  else
    newMode='rw';
    mount -o remount,rw "$mountPoint";
  fi;
  echo "Mode for /offload ${newMode} disk:${mountPoint}";
}

_xdebugEnable()
{
  echo "Renaming 15-xdebug.ini.disabled to 15-xdebug.ini ..."
  echo "Changing xdebug.remote_host to address $1 ..."
  sed "s/172.16.162.1$/$1/g" /etc/php.d/15-xdebug.ini.disabled > /etc/php.d/15-xdebug.ini
  export XDEBUG_CONFIG="remote_enable=1 remote_mode=req remote_autostart=0 remote_port=9000 remote_host=$1 remote_connect_back=0";
  echo "Done"
}

complete -F _xdebugEnable xdebug-enable

_xdebugEnableWww()
{
  _xdebugEnable $1
  echo "killing the php-fpm processes ..."
  killall php-fpm
  sleep 5;
  echo "Restarting the php-fpm daemon ..."
  php-fpm -c /etc/php.ini
  echo "Done"
}

complete -F _xdebugEnableWww xdebug-enable-www

_pbxConsoleCommands()
{
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    # Подкоманды первого уровня
    subcommands_1="cron services service"
    subCommandsServices="restart start stop" # возможные подкоманды для history
    # Цикл определения автодополнения при вводе подкоманды первого уровня
    if [[ ${COMP_CWORD} == 1 ]] ; then
        COMPREPLY=( $(compgen -W "${subcommands_1}" -- ${cur}) )
        return 0
    fi

    subcmd_1="${COMP_WORDS[1]}" #К данному моменту подкоманда первого уровня уже введена, и мы её выбираем в эту переменную
    case "${subcmd_1}" in #Дальше смотри, что она из себя представляет
    services)
        # Введены script history; надо подставить import или export
        if [[ ${COMP_CWORD} == 2 ]] ; then
            cmd='stop-all start-all restart-all';
            COMPREPLY=( $(compgen -W "${cmd}" -- ${cur}) )
            return 0
        fi
        ;;
    service)
        # Введены script history; надо подставить import или export
        if [[ ${COMP_CWORD} == 3 ]] ; then
            cmd='stop';
            COMPREPLY=( $(compgen -W "${cmd}" -- ${cur}) )
            return 0
        fi

        if [[ ${COMP_CWORD} == 2 ]] ; then
            # Получим имена сервисов.
            subCommandsServices=$(ps | grep php | grep Worker | cut -d '}' -f2 | tr '\\' '/' | xargs basename -a);
            COMPREPLY=( $(compgen -W "${subCommandsServices}" -- ${cur}) )
            return 0
        fi
        ;;
    cron)
        # Введены script history; надо подставить import или export
        if [[ ${COMP_CWORD} == 2 ]] ; then
            cmd='stop start show restart';
            COMPREPLY=( $(compgen -W "${cmd}" -- ${cur}) )
            return 0
        fi
        ;;
    esac
    return 0

}

complete -F _pbxConsoleCommands pbx-console